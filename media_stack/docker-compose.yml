services:
  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - "51820:51820/udp"  # WireGuard port
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER}
      - VPN_TYPE=${VPN_TYPE}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - SERVER_COUNTRIES=Denmark,Sweden,Netherlands,Germany,United States,United Kingdom,Finland
      - SERVER_CATEGORIES=P2P
      - BLOCK_MALICIOUS=off
      - TZ=${TIMEZONE}
      - FIREWALL_VPN_INPUT_PORTS=6881
    volumes:
      - /opt/docker_apps/Autorreton/gluetun_docker_conf:/gluetun
    networks: 
      - media_network
      - proxy_network
    restart: unless-stopped

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: "service:gluetun" # All qBit traffic via Gluetun; it will use Gluetun's IP on media_network
    environment:
      - PUID=${PUID} # UID of mediamanager
      - PGID=${PGID} # GID of mediausers
      - TZ=${TIMEZONE}
      - UMASK_SET=002
      - WEBUI_PORT=8081 # qBittorrent listens on this port within Gluetun's network namespace
    volumes:
      - /opt/docker_apps/Autorreton/qbittorrent_docker_conf:/config
      - /srv/torrents:/downloads
    depends_on:
      gluetun:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 30s
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${PUID} # UID of mediamanager
      - PGID=${PGID} # GID of mediausers
      - TZ=${TIMEZONE}
      - UMASK_SET=002
    volumes:
      - /opt/docker_apps/Autorreton/prowlarr_docker_conf:/config
    networks: # Assign Prowlarr to media_net
      - media_network
      - proxy_network
    depends_on:
      - gluetun
      - qbittorrent
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9696/"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 30s

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID} # UID of mediamanager
      - PGID=${PGID} # GID of mediausers
      - TZ=${TIMEZONE}
      - UMASK_SET=002
    volumes:
      - /opt/docker_apps/Autorreton/radarr_docker_conf:/config
      - /srv/jellyfin/movies:/movies
      - /srv/torrents:/downloads
    networks: 
      - media_network
      - proxy_network
    depends_on:
      - qbittorrent
      - prowlarr
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7878/"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 30s

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID} # UID of mediamanager
      - PGID=${PGID} # GID of mediausers
      - TZ=${TIMEZONE}
      - UMASK_SET=002
    volumes:
      - /opt/docker_apps/Autorreton/sonarr_docker_conf:/config
      - /srv/jellyfin/tvshows:/tv
      - /srv/torrents:/downloads
    networks: 
      - media_network
      - proxy_network
    depends_on:
      - qbittorrent
      - prowlarr
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8989/"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 30s

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    environment:
      - PUID=1001 # UID of mediamanager
      - PGID=1002 # GID of mediausers
      - TZ=${TIMEZONE}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /opt/docker_apps/Autorreton/bazarr_docker_conf:/config
      - /opt/docker_apps/Autorreton/bazarr_docker_data:/data
      - /srv/jellyfin/movies:/movies
      - /srv/jellyfin/tvshows:/tv
    networks: 
      - media_network
      - proxy_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6767/"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 30s

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    user: "104:113"
    group_add:
      - ${PGID}   # mediamanager groupadd   
    volumes:
      - /opt/docker_apps/Autorreton/jellyfin_docker_conf:/config
      - /opt/docker_apps/Autorreton/jellyfin_docker_cache:/cache 
      - /srv/jellyfin/movies:/media/movies:ro
      - /srv/jellyfin/tvshows:/media/tvshows:ro
    environment:
      - TZ=${TIMEZONE}
    networks:
      - media_network
      - proxy_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8096/"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 1m

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TOKEN} 
    networks:
      - cloudflare_tunnel
      - proxy_network

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - PUID=1001 # UID of mediamanager
      - PGID=1002 # GID of mediausers
      - TZ=${TIMEZONE}
      - UMASK_SET=002
    volumes:
      - /opt/docker_apps/Autorreton/jellyseerr_docker_conf:/app/config
    restart: unless-stopped
    networks:
      - media_network
      - proxy_network
    depends_on:
      - radarr
      - sonarr
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --spider --tries=1 --timeout=10 http://localhost:5055/login || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 1m
  
networks:
  media_network:
    driver: bridge
    name: autorreton_medianet
  cloudflare_tunnel:
    driver: bridge
    name: cloudflare_tunnel_network
  proxy_network:
    external: true